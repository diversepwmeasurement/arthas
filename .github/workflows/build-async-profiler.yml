jobs:
  build-alpine-linux-arm64:
    if: ${{ inputs.async-profiler-tag-name }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        repository: async-profiler/async-profiler
    - continue-on-error: true
      name: Checkout the async-profiler repository by input tag name ${{ inputs.async-profiler-tag-name
        }}
      run: git checkout ${{ inputs.async-profiler-tag-name }}
    - continue-on-error: true
      name: Setup Alpine Linux aarch64 environment
      uses: jirutka/setup-alpine@v1
      with:
        arch: aarch64
        branch: v3.15
        packages: 'build-base linux-headers openjdk11

          '
        shell-name: alpine-aarch64.sh
    - continue-on-error: true
      name: Run script inside Alpine Linux aarch64 environment
      run: 'grep -m1 PROFILER_VERSION Makefile

        JAVA_HOME=/usr/lib/jvm/java-11-openjdk

        java -version

        which java

        echo "Append -static-libgcc -static-libstdc++ options to CXXFLAGS for user
        no need to install libstdc++ and libgcc manually."

        sed -i ''s/CXXFLAGS=/CXXFLAGS=-static-libgcc -static-libstdc++ /'' Makefile
        && make

        LIB_PROFILER_PATH=$(find build -type f -name libasyncProfiler.so 2>/dev/null)

        [ -z "${LIB_PROFILER_PATH}" ] && echo "Can not find libasyncProfiler.so file
        under build directory." && exit 1

        echo "LIB_PROFILER_PATH=${LIB_PROFILER_PATH}"

        file ${LIB_PROFILER_PATH}

        ldd ${LIB_PROFILER_PATH}

        cp ${LIB_PROFILER_PATH} libasyncProfiler-linux-musl-arm64.so

        '
      shell: alpine-aarch64.sh {0}
    - continue-on-error: true
      uses: actions/upload-artifact@v3
      with:
        if-no-files-found: error
        name: async-profiler
        path: libasyncProfiler-linux-musl-arm64.so
  build-alpine-linux-x64:
    if: ${{ inputs.async-profiler-tag-name }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        repository: async-profiler/async-profiler
    - continue-on-error: true
      name: Checkout the async-profiler repository by input tag name ${{ inputs.async-profiler-tag-name
        }}
      run: git checkout ${{ inputs.async-profiler-tag-name }}
    - continue-on-error: true
      name: Setup Alpine Linux x86-64 environment
      uses: jirutka/setup-alpine@v1
      with:
        arch: x86_64
        branch: v3.15
        packages: 'build-base linux-headers openjdk11

          '
        shell-name: alpine-x86_64.sh
    - continue-on-error: true
      name: Run script inside Alpine Linux x86-64 environment
      run: 'grep -m1 PROFILER_VERSION Makefile

        JAVA_HOME=/usr/lib/jvm/java-11-openjdk

        java -version

        which java

        echo "Append -static-libgcc -static-libstdc++ options to CXXFLAGS for user
        no need to install libstdc++ and libgcc manually."

        sed -i ''s/CXXFLAGS=/CXXFLAGS=-static-libgcc -static-libstdc++ /'' Makefile
        && make

        LIB_PROFILER_PATH=$(find build -type f -name libasyncProfiler.so 2>/dev/null)

        [ -z "${LIB_PROFILER_PATH}" ] && echo "Can not find libasyncProfiler.so file
        under build directory." && exit 1

        echo "LIB_PROFILER_PATH=${LIB_PROFILER_PATH}"

        file ${LIB_PROFILER_PATH}

        ldd ${LIB_PROFILER_PATH}

        cp ${LIB_PROFILER_PATH} libasyncProfiler-linux-musl-x64.so

        '
      shell: alpine-x86_64.sh {0}
    - continue-on-error: true
      uses: actions/upload-artifact@v3
      with:
        if-no-files-found: error
        name: async-profiler
        path: libasyncProfiler-linux-musl-x64.so
  build-generic-linux-arm64:
    if: ${{ inputs.async-profiler-tag-name }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        repository: async-profiler/async-profiler
    - continue-on-error: true
      name: Checkout the async-profiler repository by input tag name ${{ inputs.async-profiler-tag-name
        }}
      run: git checkout ${{ inputs.async-profiler-tag-name }}
    - continue-on-error: true
      name: Execute compile inside CentOS 7 aarch64 docker container environment via
        QEMU
      uses: uraimo/run-on-arch-action@v2
      with:
        arch: none
        base_image: arm64v8/centos:7
        distro: none
        run: 'cat /etc/system-release

          uname -m

          yum -y update && yum install -y java-11-openjdk-devel gcc-c++ make which
          file

          JAVA_HOME=/usr/lib/jvm/java-11-openjdk

          java -version

          which java

          grep -m1 PROFILER_VERSION Makefile

          make

          LIB_PROFILER_PATH=$(find build -type f -name libasyncProfiler.so 2>/dev/null)

          [ -z "${LIB_PROFILER_PATH}" ] && echo "Can not find libasyncProfiler.so
          file under build directory." && exit 1

          echo "LIB_PROFILER_PATH=${LIB_PROFILER_PATH}"

          file ${LIB_PROFILER_PATH}

          ldd ${LIB_PROFILER_PATH}

          cp ${LIB_PROFILER_PATH} libasyncProfiler-linux-arm64.so

          '
    - continue-on-error: true
      uses: actions/upload-artifact@v3
      with:
        if-no-files-found: error
        name: async-profiler
        path: libasyncProfiler-linux-arm64.so
  build-generic-linux-x64:
    if: ${{ inputs.async-profiler-tag-name }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        repository: async-profiler/async-profiler
    - continue-on-error: true
      name: Checkout the async-profiler repository by input tag name ${{ inputs.async-profiler-tag-name
        }}
      run: git checkout ${{ inputs.async-profiler-tag-name }}
    - continue-on-error: true
      name: Execute compile inside CentOS 6 x86_64 docker container environment
      uses: uraimo/run-on-arch-action@v2
      with:
        arch: none
        base_image: amd64/centos:6.10
        distro: none
        run: 'cat /etc/system-release

          uname -m

          minorver=6.10

          sed -e "s|^mirrorlist=|#mirrorlist=|g" \

          -e "s|^#baseurl=http://mirror.centos.org/centos/\$releasever|baseurl=https://mirrors.aliyun.com/centos-vault/$minorver|g"
          \

          -i.bak /etc/yum.repos.d/CentOS-*.repo

          yum -y update && yum install -y wget

          wget --no-check-certificate https://people.centos.org/tru/devtools-1.1/devtools-1.1.repo
          -O /etc/yum.repos.d/devtools-1.1.repo

          yum install -y devtoolset-1.1-gcc devtoolset-1.1-gcc-c++ devtoolset-1.1-binutils

          export CC=/opt/centos/devtoolset-1.1/root/usr/bin/gcc

          export CPP=/opt/centos/devtoolset-1.1/root/usr/bin/cpp

          export CXX=/opt/centos/devtoolset-1.1/root/usr/bin/c++

          ln -sf /opt/centos/devtoolset-1.1/root/usr/bin/* /usr/local/bin/

          hash -r

          wget https://download.java.net/java/GA/jdk11/9/GPL/openjdk-11.0.2_linux-x64_bin.tar.gz
          -O openjdk-11.tar.gz

          tar zxf openjdk-11.tar.gz

          mv jdk-11.0.2 /usr/local/

          export JAVA_HOME=/usr/local/jdk-11.0.2

          export PATH=${JAVA_HOME}/bin:${PATH}

          java -version

          which java

          grep -m1 PROFILER_VERSION Makefile

          make

          LIB_PROFILER_PATH=$(find build -type f -name libasyncProfiler.so 2>/dev/null)

          [ -z "${LIB_PROFILER_PATH}" ] && echo "Can not find libasyncProfiler.so
          file under build directory." && exit 1

          echo "LIB_PROFILER_PATH=${LIB_PROFILER_PATH}"

          file ${LIB_PROFILER_PATH}

          ldd ${LIB_PROFILER_PATH}

          cp ${LIB_PROFILER_PATH} libasyncProfiler-linux-x64.so

          '
    - continue-on-error: true
      uses: actions/upload-artifact@v3
      with:
        if-no-files-found: error
        name: async-profiler
        path: libasyncProfiler-linux-x64.so
  build-mac:
    if: ${{ inputs.async-profiler-tag-name }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        repository: async-profiler/async-profiler
    - continue-on-error: true
      name: Checkout the async-profiler repository by input tag name ${{ inputs.async-profiler-tag-name
        }}
      run: git checkout ${{ inputs.async-profiler-tag-name }}
    - continue-on-error: true
      uses: actions/setup-java@v3
      with:
        distribution: liberica
        java-version: '11'
    - continue-on-error: true
      name: Execute compile inside macOS 12 environment
      run: 'grep -m1 PROFILER_VERSION Makefile

        echo "JAVA_HOME=${JAVA_HOME}"

        java -version

        echo "FAT_BINARY variable that make libasyncProfiler-mac.so works both on
        macOS x86-64 and arm64"

        make FAT_BINARY=true

        LIB_PROFILER_PATH=$(find build -type f \( -name libasyncProfiler.so -o -name
        libasyncProfiler.dylib \) 2>/dev/null)

        [ -z "${LIB_PROFILER_PATH}" ] && echo "Can not find libasyncProfiler.so or
        libasyncProfiler.dylib file under build directory." && exit 1

        echo "LIB_PROFILER_PATH=${LIB_PROFILER_PATH}"

        file ${LIB_PROFILER_PATH}

        otool -L ${LIB_PROFILER_PATH}

        cp ${LIB_PROFILER_PATH} libasyncProfiler-mac.so

        '
    - continue-on-error: true
      uses: actions/upload-artifact@v3
      with:
        if-no-files-found: error
        name: async-profiler
        path: libasyncProfiler-mac.so
  upload-libasyncProfiler-files:
    needs:
    - build-mac
    - build-generic-linux-x64
    - build-generic-linux-arm64
    - build-alpine-linux-x64
    - build-alpine-linux-arm64
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout arthas upstream repo
      uses: actions/checkout@v3
    - continue-on-error: true
      uses: actions/download-artifact@v3
      with:
        name: async-profiler
        path: tmp-async-profiler
    - continue-on-error: true
      name: Modify permissions and Display structure of downloaded files
      run: 'chmod 755 libasyncProfiler-*

        ls -lrt

        '
      working-directory: tmp-async-profiler
    - continue-on-error: true
      name: Commit and Push libasyncProfiler files
      run: 'git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"

        git config --local user.name "github-actions[bot]"

        mv tmp-async-profiler/* async-profiler/

        git add async-profiler/

        git commit -m "Upload arthas async-profiler libs"

        '
    - continue-on-error: true
      name: Push changes
      uses: ad-m/github-push-action@master
      with:
        branch: ${{ github.ref }}
        force: true
        github_token: ${{ secrets.GITHUB_TOKEN }}
name: build async-profiler
on:
  repository_dispatch:
    types: trigger-ga___build-async-profiler.yml
